//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(Achiever.Data.ApplicationDbContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsd2b77c9e70bf757f42074d41b442f70c3c24eb8b9a1a6001eda12c4284496f00))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySetsd2b77c9e70bf757f42074d41b442f70c3c24eb8b9a1a6001eda12c4284496f00 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "d2b77c9e70bf757f42074d41b442f70c3c24eb8b9a1a6001eda12c4284496f00"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "AchieverDataModelsStoreContainer.Achievements")
            {
                return GetView0();
            }

            if (extentName == "AchieverDataModelsStoreContainer.Groups")
            {
                return GetView1();
            }

            if (extentName == "AchieverDataModelsStoreContainer.Thropheys")
            {
                return GetView2();
            }

            if (extentName == "ApplicationDbContext.Achievements")
            {
                return GetView3();
            }

            if (extentName == "ApplicationDbContext.Groups")
            {
                return GetView4();
            }

            if (extentName == "ApplicationDbContext.Thropheys")
            {
                return GetView5();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for AchieverDataModelsStoreContainer.Achievements.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Achievements
        [Achiever.Data.Models.Store.Achievements](T1.Achievements_Id, T1.Achievements_Title, T1.Achievements_Description, T1.Achievements_Wiki, T1.Achievements_Image, T1.Achievements_ThropheyId, T1.Achievements_GroupId, T1.Achievements_CreatedOn)
    FROM (
        SELECT 
            T.Id AS Achievements_Id, 
            T.Title AS Achievements_Title, 
            T.Description AS Achievements_Description, 
            T.Wiki AS Achievements_Wiki, 
            T.Image AS Achievements_Image, 
            T.ThropheyId AS Achievements_ThropheyId, 
            T.GroupId AS Achievements_GroupId, 
            T.CreatedOn AS Achievements_CreatedOn, 
            True AS _from0
        FROM ApplicationDbContext.Achievements AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for AchieverDataModelsStoreContainer.Groups.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Groups
        [Achiever.Data.Models.Store.Groups](T1.Groups_Id, T1.Groups_Title, T1.Groups_Description, T1.Groups_Image, T1.Groups_CreatedOn)
    FROM (
        SELECT 
            T.Id AS Groups_Id, 
            T.Title AS Groups_Title, 
            T.Description AS Groups_Description, 
            T.Image AS Groups_Image, 
            T.CreatedOn AS Groups_CreatedOn, 
            True AS _from0
        FROM ApplicationDbContext.Groups AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for AchieverDataModelsStoreContainer.Thropheys.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Thropheys
        [Achiever.Data.Models.Store.Thropheys](T1.Thropheys_Id, T1.Thropheys_Name, T1.Thropheys_Level, T1.Thropheys_CreatedOn)
    FROM (
        SELECT 
            T.Id AS Thropheys_Id, 
            T.Name AS Thropheys_Name, 
            T.Level AS Thropheys_Level, 
            T.CreatedOn AS Thropheys_CreatedOn, 
            True AS _from0
        FROM ApplicationDbContext.Thropheys AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApplicationDbContext.Achievements.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Achievements
        [Achiever.Data.Models.Achievement](T1.Achievement_Id, T1.Achievement_Title, T1.Achievement_Description, T1.Achievement_Wiki, T1.Achievement_Image, T1.Achievement_ThropheyId, T1.Achievement_GroupId, T1.Achievement_CreatedOn)
    FROM (
        SELECT 
            T.Id AS Achievement_Id, 
            T.Title AS Achievement_Title, 
            T.Description AS Achievement_Description, 
            T.Wiki AS Achievement_Wiki, 
            T.Image AS Achievement_Image, 
            T.ThropheyId AS Achievement_ThropheyId, 
            T.GroupId AS Achievement_GroupId, 
            T.CreatedOn AS Achievement_CreatedOn, 
            True AS _from0
        FROM AchieverDataModelsStoreContainer.Achievements AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApplicationDbContext.Groups.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Groups
        [Achiever.Data.Models.Group](T1.Group_Id, T1.Group_Title, T1.Group_Description, T1.Group_Image, T1.Group_CreatedOn)
    FROM (
        SELECT 
            T.Id AS Group_Id, 
            T.Title AS Group_Title, 
            T.Description AS Group_Description, 
            T.Image AS Group_Image, 
            T.CreatedOn AS Group_CreatedOn, 
            True AS _from0
        FROM AchieverDataModelsStoreContainer.Groups AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApplicationDbContext.Thropheys.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Thropheys
        [Achiever.Data.Models.Throphey](T1.Throphey_Id, T1.Throphey_Name, T1.Throphey_Level, T1.Throphey_CreatedOn)
    FROM (
        SELECT 
            T.Id AS Throphey_Id, 
            T.Name AS Throphey_Name, 
            T.Level AS Throphey_Level, 
            T.CreatedOn AS Throphey_CreatedOn, 
            True AS _from0
        FROM AchieverDataModelsStoreContainer.Thropheys AS T
    ) AS T1");
        }
    }
}
